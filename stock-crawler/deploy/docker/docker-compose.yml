version: '3.8'

services:
  stock-crawler:
    build:
      context: ../..
      dockerfile: deploy/docker/Dockerfile
    container_name: stock-crawler
    restart: unless-stopped
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - DB_NAME=chaogu
      - CRAWL_DELAY=0.5
      - BATCH_SIZE=100
      - MAX_RETRIES=3
      - LOG_LEVEL=INFO
      - LOG_FILE=logs/crawler.log
      - TZ=Asia/Shanghai
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - stock-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mysql:
    image: mysql:8.0
    container_name: stock-mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=chaogu
      - MYSQL_USER=stockuser
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - TZ=Asia/Shanghai
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - stock-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # 可选：添加监控服务
  prometheus:
    image: prom/prometheus:latest
    container_name: stock-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - stock-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: stock-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - stock-network
    profiles:
      - monitoring

volumes:
  mysql_data:
  prometheus_data:
  grafana_data:

networks:
  stock-network:
    driver: bridge